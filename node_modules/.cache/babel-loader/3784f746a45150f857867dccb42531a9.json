{"ast":null,"code":"import _slicedToArray from \"/home/carlos/diosplan/tutoriales/waveportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/home/carlos/diosplan/tutoriales/waveportal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _this = this,\n  _jsxFileName = \"/home/carlos/diosplan/tutoriales/waveportal/src/App.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nvar getEthereumObject = function getEthereumObject() {\n  return window.ethereum;\n};\n\n/*\n * This function returns the first linked account found.\n * If there is no account linked, it will return null.\n */\nvar findMetaMaskAccount = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var ethereum, accounts, account;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            ethereum = getEthereumObject(); /*\n                                            * First make sure we have access to the Ethereum object.\n                                            */\n            if (ethereum) {\n              _context.next = 5;\n              break;\n            }\n            console.error(\"Make sure you have Metamask!\");\n            return _context.abrupt(\"return\", null);\n          case 5:\n            console.log(\"We have the Ethereum object\", ethereum);\n            _context.next = 8;\n            return ethereum.request({\n              method: \"eth_accounts\"\n            });\n          case 8:\n            accounts = _context.sent;\n            if (!(accounts.length !== 0)) {\n              _context.next = 15;\n              break;\n            }\n            account = accounts[0];\n            console.log(\"Found an authorized account:\", account);\n            return _context.abrupt(\"return\", account);\n          case 15:\n            console.error(\"No authorized account found\");\n            return _context.abrupt(\"return\", null);\n          case 17:\n            _context.next = 23;\n            break;\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", null);\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 19]]);\n  }));\n  return function findMetaMaskAccount() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar App = function App() {\n  /*\n   * The passed callback function will be run when the page loads.\n   * More technically, when the App component \"mounts\".\n   */var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentAccount = _useState2[0],\n    setCurrentAccount = _useState2[1]; /*\n                                        * The passed callback function will be run when the page loads.\n                                        * More technically, when the App component \"mounts\".\n                                        */\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var account;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return findMetaMaskAccount();\n          case 2:\n            account = _context2.sent;\n            if (account !== null) {\n              setCurrentAccount(account);\n            }\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), []);\n  var wave = function wave() {};\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dataContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDD25\"), \" Hola!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Encorage the community with a message.\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"waveButton\",\n    onClick: wave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDD25\"), \" at starkdevs\")));\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","getEthereumObject","window","ethereum","findMetaMaskAccount","console","error","log","request","method","accounts","length","account","App","currentAccount","setCurrentAccount","wave"],"sources":["/home/carlos/diosplan/tutoriales/waveportal/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nconst getEthereumObject = () => window.ethereum;\n\n/*\n * This function returns the first linked account found.\n * If there is no account linked, it will return null.\n */\nconst findMetaMaskAccount = async () => {\n  try {\n    const ethereum = getEthereumObject();\n\n    /*\n    * First make sure we have access to the Ethereum object.\n    */\n    if (!ethereum) {\n      console.error(\"Make sure you have Metamask!\");\n      return null;\n    }\n\n    console.log(\"We have the Ethereum object\", ethereum);\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      return account;\n    } else {\n      console.error(\"No authorized account found\");\n      return null;\n    }\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\nconst App = () => {\n  /*\n   * The passed callback function will be run when the page loads.\n   * More technically, when the App component \"mounts\".\n   */\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  /*\n   * The passed callback function will be run when the page loads.\n   * More technically, when the App component \"mounts\".\n   */\n  useEffect(async () => {\n    const account = await findMetaMaskAccount();\n    if (account !== null) {\n      setCurrentAccount(account);\n    }\n  }, []);\n  const wave = () => {\n    \n  };\n  \n  return (\n    <div className=\"mainContainer\">\n\n      <div className=\"dataContainer\">\n        <div className=\"header\">\n          <span>🔥</span> Hola!\n        </div>\n\n        <div className=\"bio\">\n          Encorage the community with a message.    \n        </div>\n\n        <button className=\"waveButton\" onClick={wave}>\n        <span>🔥</span> at starkdevs\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;;+CACA;AADA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAElB,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB;EAAA,OAASC,MAAM,CAACC,QAAQ;AAAA;;AAE/C;AACA;AACA;AACA;AACA,IAAMC,mBAAmB;EAAA,sEAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAElBD,QAAQ,GAAGF,iBAAiB,EAAE,EAEpC;AACJ;AACA;YAFI,IAGKE,QAAQ;cAAA;cAAA;YAAA;YACXE,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;YAAC,iCACvC,IAAI;UAAA;YAGbD,OAAO,CAACE,GAAG,CAAC,6BAA6B,EAAEJ,QAAQ,CAAC;YAAC;YAAA,OAC9BA,QAAQ,CAACK,OAAO,CAAC;cAAEC,MAAM,EAAE;YAAe,CAAC,CAAC;UAAA;YAA7DC,QAAQ;YAAA,MAEVA,QAAQ,CAACC,MAAM,KAAK,CAAC;cAAA;cAAA;YAAA;YACjBC,OAAO,GAAGF,QAAQ,CAAC,CAAC,CAAC;YAC3BL,OAAO,CAACE,GAAG,CAAC,8BAA8B,EAAEK,OAAO,CAAC;YAAC,iCAC9CA,OAAO;UAAA;YAEdP,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;YAAC,iCACtC,IAAI;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAGbD,OAAO,CAACC,KAAK,aAAO;YAAC,iCACd,IAAI;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAEd;EAAA,gBA3BKF,mBAAmB;IAAA;EAAA;AAAA,GA2BxB;AAED,IAAMS,GAAG,GAAG,SAANA,GAAG,GAAS;EAChB;AACF;AACA;AACA,KAHE,gBAI4Cb,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjDc,cAAc;IAAEC,iBAAiB,kBAExC;AACF;AACA;AACA;EACEhB,SAAS,0EAAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACcK,mBAAmB,EAAE;UAAA;YAArCQ,OAAO;YACb,IAAIA,OAAO,KAAK,IAAI,EAAE;cACpBG,iBAAiB,CAACH,OAAO,CAAC;YAC5B;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACF,IAAE,EAAE,CAAC;EACN,IAAMI,IAAI,GAAG,SAAPA,IAAI,GAAS,CAEnB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAE5B;IAAK,SAAS,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC5B;IAAK,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACrB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAe,WACX,eAEN;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4CAEd,eAEN;IAAQ,SAAS,EAAC,YAAY;IAAC,OAAO,EAAEA,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAe,kBACN,CACL,CACF;AAEV,CAAC;AAED,eAAeH,GAAG"},"metadata":{},"sourceType":"module"}